{"version":3,"file":"uploader.cjs","sources":["../../lib/uploader.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport axios from \"axios\";\r\nimport * as qiniu from \"qiniu-js\";\r\nimport COS from \"cos-js-sdk-v5\";\r\nimport { File as QFile, Normal as QEtag, utils as QUtils } from \"qetag-js\";\r\n\r\nclass uploader {\r\n    constructor({ type, onSuccess, onFail, onGetConfig, onProgress }) {\r\n        this.type = type;\r\n        this.onSuccess = onSuccess;\r\n        this.onFail = onFail;\r\n        this.onGetConfig = onGetConfig;\r\n        this.onProgress = onProgress;\r\n    }\r\n\r\n    getConfig() {\r\n        return new Promise((resolve, reject) => {\r\n            this.onGetConfig(\r\n                (config) => {\r\n                    this.setConfig.call(this, config);\r\n                    resolve();\r\n                },\r\n                {\r\n                    type: this.type,\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    setConfig({ driver, config }) {\r\n        this.driver = driver;\r\n        this.config = config;\r\n        switch (driver) {\r\n            case \"aliyun\":\r\n                this.setAliyun(config);\r\n                break;\r\n            case \"qiniu\":\r\n                this.setQiniu(config);\r\n                break;\r\n            case \"tencent\":\r\n                this.setTencent(config);\r\n                break;\r\n            case \"local\":\r\n                this.setLocal(config);\r\n                break;\r\n            default:\r\n                this.onFail(new Error(\"没有可用的driver\"));\r\n                break;\r\n        }\r\n    }\r\n\r\n    setTencent(config) {\r\n        const tempKeys = config.tempKeys;\r\n        const credentials = tempKeys.credentials;\r\n        this.uploader = new COS({\r\n            getAuthorization: (options, callback) => {\r\n                callback({\r\n                    TmpSecretId: credentials.tmpSecretId,\r\n                    TmpSecretKey: credentials.tmpSecretKey,\r\n                    SecurityToken: credentials.sessionToken,\r\n                    StartTime: tempKeys.startTime, // 时间戳，单位秒，如：1580000000\r\n                    ExpiredTime: tempKeys.expiredTime, // 时间戳，单位秒，如：1580000000\r\n                });\r\n            },\r\n        });\r\n    }\r\n\r\n    setAliyun(config) {\r\n        const data = new FormData();\r\n\r\n        if (Object.keys(config[\"callback-var\"]).length) {\r\n            for (const [key, value] of Object.entries(config[\"callback-var\"])) {\r\n                if (typeof value === \"string\") {\r\n                    data.append(key, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        data.append(\"OSSAccessKeyId\", config.accessid);\r\n        data.append(\"policy\", config.policy);\r\n        data.append(\"signature\", config.signature);\r\n        data.append(\"callback\", config.callback);\r\n        data.append(\"success_action_status\", \"200\");\r\n        data.append(\"x-oss-forbid-overwrite\", \"true\");\r\n\r\n        this.uploader = axios.create({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"multipart/form-data\",\r\n            },\r\n            data,\r\n            onUploadProgress: (res) => {\r\n                this.onProgress(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    setQiniu(config) {\r\n        console.log(config);\r\n        this.uploader = qiniu.upload(this.file, config.prefix + \"1\", config.token);\r\n    }\r\n\r\n    setLocal(config) {\r\n        const data = new FormData();\r\n\r\n        data.append(\"auth\", config.auth);\r\n        data.append(\"file\", this.file);\r\n\r\n        this.uploader = axios.create({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"multipart/form-data\",\r\n            },\r\n            data,\r\n            onUploadProgress: (res) => {\r\n                this.onProgress(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    checkMimeType(fileMime, allowMime) {\r\n        if (allowMime === \"*\") {\r\n            return true;\r\n        }\r\n\r\n        if (Array.isArray(allowMime)) {\r\n            let res = false;\r\n            for (const v of allowMime) {\r\n                if (this.checkMimeTypeByString(fileMime, v)) {\r\n                    res = true;\r\n                    break;\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n\r\n        return this.checkMimeTypeByString(fileMime, allowMime);\r\n    }\r\n\r\n    checkMimeTypeByString(fileMime, allowMime) {\r\n        if (allowMime.includes(\"/*\") !== false && fileMime.indexOf(allowMime.replace(/\\/\\*$/, \"/\") === 0)) {\r\n            return true;\r\n        }\r\n        if (allowMime === fileMime) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async getKey(file) {\r\n        const qfile = new QFile({\r\n            file: file,\r\n            blockSize: 4 * 1024 * 1024,\r\n            batch: QUtils.guid(),\r\n        });\r\n\r\n        try {\r\n            return await new QEtag(qfile, 25).get();\r\n        } catch (error) {\r\n            return file.name;\r\n        }\r\n    }\r\n\r\n    async send(file) {\r\n        this.file = file;\r\n\r\n        if ((this.config && this.config.expire_time && Math.round(new Date().getTime() / 1000 - 28800) > this.config.expire_time) || !this.config) {\r\n            await this.getConfig(file);\r\n        }\r\n\r\n        if (this.uploader == undefined) {\r\n            return;\r\n        }\r\n\r\n        const config = this.config;\r\n\r\n        // if (!this.checkMimeType(file.type, config.mime_types)) {\r\n        //     return this.onFail(new Error(\"File type is not allowed\"));\r\n        // }\r\n\r\n        // if (file.size > config.max_size) {\r\n        //     return this.onFail(new Error(\"The file is too large\"));\r\n        // }\r\n\r\n        switch (this.driver) {\r\n            case \"aliyun\":\r\n                var data = this.uploader.defaults.data;\r\n                var key = await this.getKey(this.file);\r\n                data.append(\"key\", config.dir + key);\r\n                data.append(\"file\", this.file);\r\n                this.uploader\r\n                    .request({\r\n                        url: config.host,\r\n                        data,\r\n                    })\r\n                    .then((res) => {\r\n                        this.onSuccess(res.data);\r\n                    })\r\n                    .catch(async (err) => {\r\n                        // await import('fast-xml-parser');\r\n                        // console.log(XMLParser);\r\n                        // parseString()\r\n                        console.log(err);\r\n                        this.onFail(err);\r\n                    });\r\n                break;\r\n            case \"qiniu\":\r\n                this.uploader.subscribe({\r\n                    next: (res) => {\r\n                        this.onProgress(res);\r\n                    },\r\n                    error: (err) => {\r\n                        this.onFail(err);\r\n                    },\r\n                    complete: (res) => {\r\n                        this.onSuccess(res);\r\n                    },\r\n                });\r\n                break;\r\n            case \"tencent\":\r\n                var key = await this.getKey(this.file);\r\n                this.uploader.putObject(\r\n                    {\r\n                        Bucket: config.bucket /* 存储桶: */,\r\n                        Region: config.region /* 存储桶所在地域，必须字段 */,\r\n                        Key: config.path + key /* 必须是字符串  前面拼接存储桶文件名 */,\r\n                        StorageClass: \"STANDARD\", // 固定值\r\n                        Body: file, // 上传文件对象\r\n                        onProgress: (progressData) => {\r\n                            this.onProgress(progressData);\r\n                        },\r\n                    },\r\n                    async (err, data) => {\r\n                        if (data) {\r\n                            if (data.statusCode === 200) {\r\n                                try {\r\n                                    const res = await axios.post(config.callback_url, {\r\n                                        etag: data.ETag,\r\n                                        sessionToken: config.tempKeys.credentials.sessionToken,\r\n                                        auth: config.auth,\r\n                                        localtion: data.Location,\r\n                                        mimetype: file.type,\r\n                                        size: file.size,\r\n                                    });\r\n                                    return this.onSuccess(res.data);\r\n                                } catch (error) {\r\n                                    return this.onFail(error);\r\n                                }\r\n                            }\r\n                            this.onFail(data);\r\n                        } else {\r\n                            this.onFail(err);\r\n                        }\r\n                    }\r\n                );\r\n                break;\r\n            case \"local\":\r\n                this.uploader.defaults.data.append(\"key\", config.prefix + (await this.getKey(file)));\r\n                this.uploader\r\n                    .request({\r\n                        url: config.host,\r\n                        data: this.uploader.defaults.data,\r\n                    })\r\n                    .then((res) => {\r\n                        this.onSuccess(res.data);\r\n                    })\r\n                    .catch((err) => {\r\n                        this.onFail(err);\r\n                    });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n// this module should only have a default export\r\nexport default uploader;\r\n"],"names":["COS","axios","qiniu","QFile","QUtils","QEtag"],"mappings":"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"}